import numpy as np


def adversarial_text(raw, nlp, indices, transform):
    adv_words = [token.text_with_ws for token in nlp(raw)]
    for i in indices:
        if i >= len(adv_words): continue
        adv_words[i] = transform(adv_words[i])
    return ''.join(adv_words)


homos = {'-':'Àó','9':'‡ß≠','8':'»¢','7':'ùüï','6':'–±','5':'∆º','4':'·èé','3':'∆∑','2':'·íø','1':'l','0':'O',
         "'":'`','a': '…ë', 'b': '–¨', 'c': 'œ≤', 'd': '‘Å', 'e': '–µ', 'f': 'ùöè', 'g': '…°', 'h': '’∞',
         'i': '—ñ', 'j': 'œ≥', 'k': 'ùíå', 'l': '‚Öº', 'm': 'ÔΩç', 'n': '’∏', 'o':'–æ', 'p': '—Ä', 'q': '‘õ',
         'r': '‚≤Ö', 's': '—ï', 't': 'ùöù', 'u': '’Ω', 'v': '—µ', 'w': '‘ù', 'x': '√ó', 'y': '—É', 'z': '·¥¢'}


def homoglyph(word):
    N = len(word)-1 if word[-1] == ' ' else len(word)
    N = max(1, N)
    s = np.random.randint(0, N)
    if word[s] in homos: 
        adv_char = homos[word[s]]
    else:
        adv_char = word[s]
    adv_word = word[:s] + adv_char + word[s+1:]
    return adv_word


def remove_char(word):
    N = len(word)-1 if word[-1] == ' ' else len(word)
    N = max(1, N)
    s = np.random.randint(0, N)
    adv_word = word[:s] + word[s+1:]
    return adv_word


def flip_char(word):
    N = len(word)-1 if word[-1] == ' ' else len(word)
    N = max(1, N)
    s = np.random.randint(0, N)
    letter = ord(word[s])
    adv_char = np.random.randint(0,25) + 97
    adv_word = word[:s] + chr(adv_char) + word[s+1:]
    return adv_word